{"ast":null,"code":"import _slicedToArray from \"/Users/guvenaltunsoy/Desktop/react/algolia-example/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guvenaltunsoy/Desktop/react/algolia-example/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Result from './Components/result';\n\nconst algoliasearch = require('algoliasearch');\n\nconst client = algoliasearch('YR9EHTUZLF', '0fa905cc79c37865c895cbd920b33420');\nconst index = client.initIndex('test_firstSearchIndex');\n\nfunction search(searchKey) {}\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchKey = _useState2[0],\n        setSearchKey = _useState2[1];\n\n  useEffect(() => {\n    console.log(`Enter Key = ${searchKey}`);\n  });\n\n  function enterFunction(event) {\n    search(searchKey);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Algolia Search\"), React.createElement(\"input\", {\n    type: \"text\",\n    onKeyPress: event => {\n      if (event.key === 'Enter') {\n        index.search({\n          'query': event.target.value\n        }).then(({\n          hits\n        } = {}) => {\n          console.log(hits);\n        }).catch(err => {\n          console.log(err);\n          console.log(err.debugData);\n        });\n      }\n    },\n    onChange: event => setSearchKey(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guvenaltunsoy/Desktop/react/algolia-example/src/App.js"],"names":["React","useState","useEffect","Result","algoliasearch","require","client","index","initIndex","search","searchKey","App","setSearchKey","console","log","enterFunction","event","key","target","value","then","hits","catch","err","debugData"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,MAAMC,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAMC,MAAM,GAAGF,aAAa,CAAC,YAAD,EAAe,kCAAf,CAA5B;AACA,MAAMG,KAAK,GAAGD,MAAM,CAACE,SAAP,CAAiB,uBAAjB,CAAd;;AAEA,SAASC,MAAT,CAAgBC,SAAhB,EAA2B,CAE1B;;AAED,SAASC,GAAT,GAAe;AAAA,oBACqBV,QAAQ,CAAC,EAAD,CAD7B;AAAA;AAAA,QACNS,SADM;AAAA,QACKE,YADL;;AAGbV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAcJ,SAAU,EAArC;AACD,GAFQ,CAAT;;AAIA,WAASK,aAAT,CAAuBC,KAAvB,EAA8B;AAC5BP,IAAAA,MAAM,CAACC,SAAD,CAAN;AACD;;AACD,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,UAAU,EAAEM,KAAK,IAAI;AACtC,UAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBV,QAAAA,KAAK,CAACE,MAAN,CAAa;AAAE,mBAASO,KAAK,CAACE,MAAN,CAAaC;AAAxB,SAAb,EACGC,IADH,CACQ,CAAC;AAAEC,UAAAA;AAAF,YAAW,EAAZ,KAAmB;AACvBR,UAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACD,SAHH,EAGKC,KAHL,CAGWC,GAAG,IAAI;AACdV,UAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,SAAhB;AACD,SANH;AAOD;AACF,KAVD;AAUG,IAAA,QAAQ,EAAGR,KAAD,IAAWJ,YAAY,CAACI,KAAK,CAACE,MAAN,CAAaC,KAAd,CAVpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAkBD;;AAED,eAAeR,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Result from './Components/result';\n\n\nconst algoliasearch = require('algoliasearch');\nconst client = algoliasearch('YR9EHTUZLF', '0fa905cc79c37865c895cbd920b33420');\nconst index = client.initIndex('test_firstSearchIndex');\n\nfunction search(searchKey) {\n\n}\n\nfunction App() {\n  const [searchKey, setSearchKey] = useState(\"\");\n\n  useEffect(() => {\n    console.log(`Enter Key = ${searchKey}`);\n  });\n\n  function enterFunction(event) {\n    search(searchKey);\n  }\n  return (\n    <div className=\"App\">\n      <p>\n        Algolia Search\n      </p>\n      <input type=\"text\" onKeyPress={event => {\n        if (event.key === 'Enter') {\n          index.search({ 'query': event.target.value })\n            .then(({ hits } = {}) => {\n              console.log(hits);\n            }).catch(err => {\n              console.log(err);\n              console.log(err.debugData);\n            });\n        }\n      }} onChange={(event) => setSearchKey(event.target.value)} />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
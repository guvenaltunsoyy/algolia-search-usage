{"ast":null,"code":"import _slicedToArray from \"/Users/guvenaltunsoy/Desktop/react/algolia-example/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/guvenaltunsoy/Desktop/react/algolia-example/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst algoliasearch = require('algoliasearch');\n\nconst client = algoliasearch('YR9EHTUZLF', '0fa905cc79c37865c895cbd920b33420');\nconst index = client.initIndex('test_firstSearchIndex');\n\nfunction App() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchKey = _useState2[0],\n        setSearchKey = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        show = _useState4[0],\n        setShow = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        results = _useState6[0],\n        setResults = _useState6[1];\n\n  function search(searchKey) {\n    if (searchKey === \"\") {\n      return;\n    }\n\n    index.search({\n      'query': searchKey\n    }).then(({\n      hits\n    } = {}) => {\n      setResults(hits);\n    }).catch(err => {\n      console.log(err);\n      console.log(err.debugData);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Algolia Search with firstname\"), React.createElement(\"input\", {\n    type: \"text\",\n    onKeyPress: event => {\n      if (event.key === 'Enter') {\n        search(event);\n        setShow(true);\n      } else {\n        setShow(false);\n      }\n    },\n    onChange: event => setSearchKey(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), show && results !== undefined && results.map((value, key) => {\n    return React.createElement(\"p\", {\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Firstname : \", value.firstname, \" Lastname : \", value.lastname);\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/guvenaltunsoy/Desktop/react/algolia-example/src/App.js"],"names":["React","useState","useEffect","algoliasearch","require","client","index","initIndex","App","searchKey","setSearchKey","show","setShow","results","setResults","search","then","hits","catch","err","console","log","debugData","event","key","target","value","undefined","map","firstname","lastname"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;;AAEA,MAAMC,aAAa,GAAGC,OAAO,CAAC,eAAD,CAA7B;;AACA,MAAMC,MAAM,GAAGF,aAAa,CAAC,YAAD,EAAe,kCAAf,CAA5B;AACA,MAAMG,KAAK,GAAGD,MAAM,CAACE,SAAP,CAAiB,uBAAjB,CAAd;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACqBP,QAAQ,CAAC,EAAD,CAD7B;AAAA;AAAA,QACNQ,SADM;AAAA,QACKC,YADL;;AAAA,qBAEWT,QAAQ,CAAC,KAAD,CAFnB;AAAA;AAAA,QAENU,IAFM;AAAA,QAEAC,OAFA;;AAAA,qBAGiBX,QAAQ,EAHzB;AAAA;AAAA,QAGNY,OAHM;AAAA,QAGGC,UAHH;;AAKb,WAASC,MAAT,CAAgBN,SAAhB,EAA2B;AACzB,QAAIA,SAAS,KAAK,EAAlB,EAAsB;AAAE;AAAS;;AACjCH,IAAAA,KAAK,CAACS,MAAN,CAAa;AAAE,eAASN;AAAX,KAAb,EACGO,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,QAAW,EAAZ,KAAmB;AACvBH,MAAAA,UAAU,CAACG,IAAD,CAAV;AACD,KAHH,EAGKC,KAHL,CAGWC,GAAG,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,SAAhB;AACD,KANH;AAOD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAIE;AAAO,IAAA,IAAI,EAAC,MAAZ;AACE,IAAA,UAAU,EAAGC,KAAD,IAAW;AACrB,UAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACzBT,QAAAA,MAAM,CAACQ,KAAD,CAAN;AACAX,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAHD,MAGO;AACLA,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KARH;AASE,IAAA,QAAQ,EAAGW,KAAD,IAAWb,YAAY,CAACa,KAAK,CAACE,MAAN,CAAaC,KAAd,CATnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAcGf,IAAI,IAAIE,OAAO,KAAKc,SAApB,IACCd,OAAO,CAACe,GAAR,CAAY,CAACF,KAAD,EAAQF,GAAR,KAAgB;AAC1B,WAAO;AAAG,MAAA,GAAG,EAAEA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA0BE,KAAK,CAACG,SAAhC,kBAAuDH,KAAK,CAACI,QAA7D,CAAP;AACD,GAFD,CAfJ,CADF;AAsBD;;AAED,eAAetB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst algoliasearch = require('algoliasearch');\nconst client = algoliasearch('YR9EHTUZLF', '0fa905cc79c37865c895cbd920b33420');\nconst index = client.initIndex('test_firstSearchIndex');\n\nfunction App() {\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [results, setResults] = useState();\n\n  function search(searchKey) {\n    if (searchKey === \"\") { return; }\n    index.search({ 'query': searchKey })\n      .then(({ hits } = {}) => {\n        setResults(hits);\n      }).catch(err => {\n        console.log(err);\n        console.log(err.debugData);\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <p>\n        Algolia Search with firstname\n      </p>\n      <input type=\"text\"\n        onKeyPress={(event) => {\n          if (event.key === 'Enter') {\n            search(event);\n            setShow(true);\n          } else {\n            setShow(false);\n          }\n        }}\n        onChange={(event) => setSearchKey(event.target.value)} />\n      {show && results !== undefined &&\n        results.map((value, key) => {\n          return <p key={key}>Firstname : {value.firstname} Lastname : {value.lastname}</p>\n        })\n      }\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}